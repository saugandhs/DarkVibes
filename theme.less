
/* Define some variables used in multiple places */
@background: #1d1f21;
@foreground: #ddd;

/* Code Styling */

.CodeMirror {
    background-color: @background;
    color: @foreground;
}
.CodeMirror-scroll {
    background-color: @background;    //editor background...
    color: @foreground;               //colons,brackets,plaintext...
}

.CodeMirror-focused .CodeMirror-activeline-background {
    background: #2f2f2f; //Current Line highlight. make this darker.
}

.show-line-padding .CodeMirror-focused .CodeMirror-activeline-background {
    box-shadow: inset 5px 0 0 0 #000;
}
/*
.CodeMirror-focused {
        background: rgba(180, 0, 0, 1);
        color: #fff;                //current line number...
   
}*/

.CodeMirror-focused .CodeMirror-activeline {
    .CodeMirror-gutter-elt {
        background: rgba(0, 0, 0, 0.1);
        color: #fff;                //current line number...
    }
    .inline-widget .CodeMirror-gutter-elt {
        color: #f00;
    }
}
/*
//syntax colors begins...
*/
.cm-atom {color: #dd5;} //colors and text Values...
.cm-string {color: #ff7700;} //strings inside quotes...
.cm-string-2 {color: #ff7700;}
.cm-hr {color: #ff7700;}

.cm-number {color: #76dcba;} //numbers and number values...
.cm-attribute {color: #f9ca6f;} //html attriibutes


.cm-def {color: #d230ff;} //func and var defns...

.cm-property {color: #ff9373;}//all langs properties...

.cm-variable, .cm-variable-2, .cm-variable-3, .cm-operator, .cm-meta, .cm-bracket {color: #06bfbf;}

.cm-comment {color: #767676;} //comments

.cm-plus {color: #85a300;}
.cm-minus {color: #dc322f;}

.cm-header {color: #d85896;}

.cm-link {color: #b77fdb; text-decoration: none;}

.cm-rangeinfo {color: #6c71c4;}

.cm-keyword {color: #00d2ff;} //js keywords...
.cm-qualifier {color: #1ba1e2;} //css selectors...
.cm-builtin {color: #1ba1e2;}
.cm-tag {color: #ff0097;} //tag elements(html+css)
.cm-quote {color: #1ba1e2;}

.cm-error {color: #dc322f;}

/*
//syntax colors end...
*/

/* Extra CSS */

.CodeMirror-searching {
    background-color: #d3cd69;
    &.searching-current-match {
        background-color: #f6a644;
    }
}


.CodeMirror-cursor {
    border-left: 1px solid #c5c8c6 !important; //Cursor blink color...
}

.CodeMirror-gutters {                       //line number gutter.
    background-color: #222;
    border-right: 1px solid #1f151f;
}

.CodeMirror-linenumber {              //line numbers
    color: #0c0;
}

.CodeMirror .CodeMirror-selected {
    background: #333f48;
}
.CodeMirror-focused .CodeMirror-selected {
    background: #0050a0;
}

.CodeMirror-matchingbracket, .CodeMirror-matchingtag {
    /* Ensure visibility against gray inline editor background */
    background-color: #2e5c00;
    color: @foreground !important;
}

.CodeMirror-overwrite .CodeMirror-cursor {
    border-left: none !important;
    border-bottom: 1px solid #fff;
}

/*
    CodeMirror's use of descendant selectors for certain styling causes problems when editors are
    nested because, for items in the inner editor, the left-hand clause in the selector will now
    match either the actual containing CodeMirror instance *OR* the outer "host" CodeMirror instance.
    TODO (issue #324): We'll still have problems if editors can be nested more than one level deep,
    or if any other descendant-selector-driven CM styles can differ between inner & outer editors
    (potential problem areas include line wrap and coloring theme: basically, anything in codemirror.css
    that uses a descandant selector where the CSS class name to the left of the space is something
    other than a vanilla .CodeMirror)
 */
.CodeMirror {
    .CodeMirror {
        background: transparent;
    }

    .CodeMirror .CodeMirror-gutters {
        background: transparent;
        border-right: none;
    }

    .CodeMirror .CodeMirror-activeline-background {
        background: transparent;
    }

    .CodeMirror .CodeMirror-activeline .CodeMirror-gutter-elt {
        background: transparent;
        color: #767676;
    }

    .CodeMirror-focused .CodeMirror-activeline-background {
        background: #2f2f2f;
    }

    .CodeMirror-focused .CodeMirror-activeline {
        .CodeMirror-gutter-elt {
            background: rgba(0, 0, 0, 0.2);
            color: #fff;
        }
    }
}

.CodeMirror-foldgutter-open:after {
    color: #666;                    //all open triangles...
}
.CodeMirror-foldgutter-folded:after {
    color: #aaa;                     ///folded gutter triangle...
}

.CodeMirror.over-gutter, .CodeMirror-activeline {
    .CodeMirror-foldgutter-open:after {
        color: #fff;       //current line gutter triangle../on hover..
    }
}

.CodeMirror-foldmarker {
    border-color: #000;
    color: #ccc;
    background-color: #444;
}

/* Non-editor styling */

.image-view,
.not-editor {
    background-color: @background;
}

.view-pane .image-view {
    color: @foreground;
}
/*
.CodeMirror-focused {// .CodeMirror-activeline-background {
    background: #000 ; //Current Line highlight. make this darker.
}*/